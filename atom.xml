<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>放牛娃</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://shuovr.cn/"/>
  <updated>2016-03-24T07:38:31.312Z</updated>
  <id>http://shuovr.cn/</id>
  
  <author>
    <name>放牛娃</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一个不错的外链服务器</title>
    <link href="http://shuovr.cn/2016/03/23/%E5%A4%96%E9%93%BE%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%88%91%E7%94%A8%E4%B8%83%E7%89%9B/"/>
    <id>http://shuovr.cn/2016/03/23/外链服务器我用七牛/</id>
    <published>2016-03-23T09:56:53.555Z</published>
    <updated>2016-03-24T07:38:31.312Z</updated>
    
    <content type="html">&lt;p&gt;   最近发现七牛云提供了一个免费的存储空间，还支持各种语言来操作，于是顺便捣鼓捣鼓一下。&lt;/p&gt;
&lt;h3 id=&quot;如何申请七牛账号&quot;&gt;&lt;a href=&quot;#如何申请七牛账号&quot; class=&quot;headerlink&quot; title=&quot;如何申请七牛账号&quot;&gt;&lt;/a&gt;如何申请七牛账号&lt;/h3&gt;&lt;p&gt; &lt;a href=&quot;https://portal.qiniu.com/signup?code=3le7dtz8hicsy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;注册地址看这里&lt;/a&gt;&lt;br&gt; 注册完成后，如果只是想测试一下有1G的免费空间使用。如果想使用10G的免费空间，那需要实名认证一下。提供2张手持身份证照片即可。认证很快，一两个小时就可以了。&lt;/p&gt;
&lt;h3 id=&quot;如何使用外链&quot;&gt;&lt;a href=&quot;#如何使用外链&quot; class=&quot;headerlink&quot; title=&quot;如何使用外链&quot;&gt;&lt;/a&gt;如何使用外链&lt;/h3&gt;&lt;p&gt;注册完成后，就可以新建空间，然后就可以对刚创建的空间进行操作了。&lt;br&gt;&lt;img src=&quot;http://7xs0qk.com1.z0.glb.clouddn.com/111111.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如上图，我创建了一个shuovr名字的空间，然后选择这个空间后，我们选择内容管理这一项。然后点击上传按钮。就可以开始传文件了。传完后，选择要查看外链的文件。&lt;br&gt;&lt;img src=&quot;http://7xs0qk.com1.z0.glb.clouddn.com/222222.png&quot; alt=&quot;&quot;&gt;右下角就可以看见对应文件的外链。把外链复制到你的博客、空间或者其他支持外链的地方。本文博客的图片也是使用七牛外链的。&lt;/p&gt;
&lt;h3 id=&quot;最主要的是支持代码上传&quot;&gt;&lt;a href=&quot;#最主要的是支持代码上传&quot; class=&quot;headerlink&quot; title=&quot;最主要的是支持代码上传&quot;&gt;&lt;/a&gt;最主要的是支持代码上传&lt;/h3&gt;&lt;p&gt;我比较喜欢的一个功能是提供各种语言的SDK，来让我们自己实现代码上传功能。这也就是我为什么喜欢的原因。具体如何实现，可以参考官网的开发者文档。本处是在网上拼凑的一个使用Golang语言实现的文件上传功能。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// qiniuTest 
project main.go
package main

import (
    &amp;quot;encoding/json&amp;quot;
    &amp;quot;io/ioutil&amp;quot;
    &amp;quot;os&amp;quot;
)

import (
    &amp;quot;fmt&amp;quot;
    &amp;quot;golang.org/x/net/context&amp;quot;
    &amp;quot;qiniupkg.com/api.v7/kodo&amp;quot;
)

var uptoken string
var buckName string
var currentDir string

type config struct {
    AK string
    SK string
    BN string
}

func main() {

    currentDir, _ = os.Getwd()

    file, err := os.Open(currentDir + &amp;quot;/&amp;quot; + &amp;quot;qiniu.json&amp;quot;) // For read access.
    if err != nil {
        //log.Fatal(err)
    }
    configFromFile, _ := ioutil.ReadAll(file)
    var conf config
    err = json.Unmarshal([]byte(configFromFile), &amp;amp;conf)
    if err != nil {
        fmt.Println(&amp;quot;error:&amp;quot;, err)
    }

    kodo.SetMac(conf.AK, conf.SK)

    zone := 0                // 您空间(Bucket)所在的区域
    c := kodo.New(zone, nil) // 用默认配置创建 Client

    bucket := c.Bucket(&amp;quot;shuovr&amp;quot;)
    ctx := context.Background()

    localFile := &amp;quot;helloworld.txt&amp;quot;
    err = bucket.PutFile(ctx, nil, &amp;quot;A/helloworld.txt&amp;quot;, localFile, nil)
    if err != nil {
        fmt.Println(err) // 上传文件失败处理
        return
    }

    entry, err := bucket.Stat(ctx, &amp;quot;A/helloworld.txt&amp;quot;) // 看看空间中是否存在某个文件，其属性是什么

    fmt.Println(entry)

    //bucket.Delete(ctx, &amp;quot;foo/bar.jpg&amp;quot;) // 删除空间中的某个文件
    //bucket.ChangeMime(ctx, &amp;quot;foo/bar.jpg&amp;quot;, &amp;quot;image/jpeg&amp;quot;) // 修改某个文件的 MIME 属性
    //bucket.Move(ctx, &amp;quot;foo/bar.jpg&amp;quot;, &amp;quot;new-name.jpg&amp;quot;) // 移动文件
    //bucket.Copy(ctx, &amp;quot;foo/bar.jpg&amp;quot;, &amp;quot;new-copy-file.jpg&amp;quot;) // 复制文件

    domain := &amp;quot;7xs0qk.com1.z0.glb.clouddn.com&amp;quot;              // 您的空间绑定的域名，这个可以在七牛的Portal中查到
    baseUrl := kodo.MakeBaseUrl(domain, &amp;quot;A/helloworld.txt&amp;quot;) // 得到下载 url

    fmt.Println(baseUrl)

    fmt.Println(&amp;quot;Hello World!&amp;quot;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我想这就是以后客户端编程的最初模型吧，编写一个远程存储文件的代码，如同操作本地一样简单。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;   最近发现七牛云提供了一个免费的存储空间，还支持各种语言来操作，于是顺便捣鼓捣鼓一下。&lt;/p&gt;
&lt;h3 id=&quot;如何申请七牛账号&quot;&gt;&lt;a href=&quot;#如何申请七牛账号&quot; class=&quot;headerlink&quot; title=&quot;如何申请七牛账号&quot;&gt;&lt;/a&gt;如何申请七牛账号&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>测试图片内容</title>
    <link href="http://shuovr.cn/2016/03/21/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%B8%83%E7%89%9B%E5%8F%91%E5%9B%BE%E7%89%87%E5%8D%9A%E6%96%87/"/>
    <id>http://shuovr.cn/2016/03/21/测试用七牛发图片博文/</id>
    <published>2016-03-21T08:49:18.437Z</published>
    <updated>2016-03-21T08:50:28.472Z</updated>
    
    <content type="html">&lt;h3 id=&quot;深圳百公里美图&quot;&gt;&lt;a href=&quot;#深圳百公里美图&quot; class=&quot;headerlink&quot; title=&quot;深圳百公里美图&quot;&gt;&lt;/a&gt;深圳百公里美图&lt;/h3&gt;&lt;p&gt;起点走起&lt;img src=&quot;http://7xs0qk.com1.z0.glb.clouddn.com/133355tiduccu44uss0iiu.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;再来一张&lt;img src=&quot;http://7xs0qk.com1.z0.glb.clouddn.com/133425hv6xddom86vo8661.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;安全有保障&lt;img src=&quot;http://7xs0qk.com1.z0.glb.clouddn.com/133416fwirra1qqft3tzg7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;走到终点的都是神&lt;img src=&quot;http://7xs0qk.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160321164657.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;好吧，我没去，不说了&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;深圳百公里美图&quot;&gt;&lt;a href=&quot;#深圳百公里美图&quot; class=&quot;headerlink&quot; title=&quot;深圳百公里美图&quot;&gt;&lt;/a&gt;深圳百公里美图&lt;/h3&gt;&lt;p&gt;起点走起&lt;img src=&quot;http://7xs0qk.com1.z0.glb.clouddn.co
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>让exe崩溃时生成dump文件</title>
    <link href="http://shuovr.cn/2016/03/21/%E8%AE%A9exe%E5%B4%A9%E6%BA%83%E6%97%B6%E7%94%9F%E6%88%90dump%E6%96%87%E4%BB%B6/"/>
    <id>http://shuovr.cn/2016/03/21/让exe崩溃时生成dump文件/</id>
    <published>2016-03-21T07:43:12.843Z</published>
    <updated>2016-03-21T08:24:08.173Z</updated>
    
    <content type="html">&lt;p&gt;  在Windows上编写C代码时，生成的exe有时会莫名的崩溃，日志有时候不能够发现程序在何处崩溃掉了。常用的方法就是让系统帮助我们生成一个dump文件，然后使用windebug来帮助查找原因。&lt;/p&gt;
&lt;h3 id=&quot;dump如何加入到工程&quot;&gt;&lt;a href=&quot;#dump如何加入到工程&quot; class=&quot;headerlink&quot; title=&quot;dump如何加入到工程&quot;&gt;&lt;/a&gt;dump如何加入到工程&lt;/h3&gt;&lt;p&gt;  dump文件内容如下: &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#pragma once
#include &amp;lt;windows.h&amp;gt;
   #include &amp;lt;DbgHelp.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#pragma comment(lib, &amp;quot;dbghelp.lib&amp;quot;)   

inline BOOL IsDataSectionNeeded(){
    if(pModuleNmae == NULL) return FALSE;
    WCHAR szFileName(pModuleName, NULL, NULL, szFileName, NULL);
    if(wcsicmp(szFileName, L&amp;quot;ntdll&amp;quot;) == 0) return TRUE;

    return FALSE;
}


inline BOOL CALLBACK MiniDumpCallback(PVOID pParam,
   const PMINIDUMP_CALLBACK_INPUT pInput,
   PMINIDUMP_CALLBACK_OUTPUT pOutput){
     if(pInput == 0 || pOutput == 0) return FALSE;

   switch(pInput-&amp;gt;CallbackType){
       case ModuleCallback:
       if(pOutput-&amp;gt;ModuleWriteFlags &amp;amp; ModuleWriteDataSeg)
           if(!IsDataSectionNeeded(pInput-&amp;gt;Module.FullPath))
                pOutput-&amp;gt;ModuleWriteFlags &amp;amp;= (~ModuleWriteDataSeg);
        case IncludeModuleCallback:
        case IncludeThreadCallback:
        case ThreadCallback:
        case ThreadExCallback:
             return TRUE;
        defalut:;
   }
   return FALSE;
 }
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;创建dump文件&quot;&gt;&lt;a href=&quot;#创建dump文件&quot; class=&quot;headerlink&quot; title=&quot;创建dump文件&quot;&gt;&lt;/a&gt;创建dump文件&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;inline void CreateMiniDump(PEXCEPTION_POINTERS pep, LPCTSTR strFileName){
    HANDLE hFile = CreateFile(strFileName, GENERIC_READ|GENERIC_WRITE,FILE_SHARE_WRITE,NULL,CREATE_ALWAYS,
    FILE_ATTRIBUTE_NORMAL, NULL);

   if((hFile != NULL) &amp;amp;&amp;amp; (hFile != INVALID_HANDLE_VALUE)){
       MINIDUMP_EXCEPTION_INFORMATIN mdei;
       mdei.ThreadId     = GetCurrentThreadId();
       mdei.ExceptionPointers  = pep;
       mdei.ClientPointers     = NULL;

       MINIDUMP_CALLBACK_INFORMATION mci;
       mci.CallbackRoutine = (MINIDUMP_CALLBACK_ROUTINE)MiniDumpCallback;
       mci.CallbackParam   = 0;

       //主要研究这个函数
       ::MiniDumpWriteDump(::GetCurrentProcess(),
                           ::GetCurrentProcessId(),
                           hFile,
                           MiniDumpValidTypeFlags,
                           (pep != 0)?&amp;amp;mdei:0,
                           NULL,&amp;amp;mci);
       CloseHandle(hFile);
   }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;设置回调函数给系统-才能在崩溃是调用我们的函数&quot;&gt;&lt;a href=&quot;#设置回调函数给系统-才能在崩溃是调用我们的函数&quot; class=&quot;headerlink&quot; title=&quot;设置回调函数给系统,才能在崩溃是调用我们的函数&quot;&gt;&lt;/a&gt;设置回调函数给系统,才能在崩溃是调用我们的函数&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;LONG __stdcall MyUnhandledExceptionFilter(
        PEXCEPTION_POINTERS pExceptionInfo){
    //设置生成的文件名为core.dmp
    CreateMiniDump(pExceptionInfo, L&amp;quot;core.dmp&amp;quot;);
    return EXCEPTION_EXECUTE_HANDLER;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;关闭对函数SetUnhandledExceptionFilter的调用&quot;&gt;&lt;a href=&quot;#关闭对函数SetUnhandledExceptionFilter的调用&quot; class=&quot;headerlink&quot; title=&quot;关闭对函数SetUnhandledExceptionFilter的调用&quot;&gt;&lt;/a&gt;关闭对函数SetUnhandledExceptionFilter的调用&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;void DisableSetUnhandleExceptionFilter(){
    void* addr = (void*)GetProcAddress(LoadLibrary(L&amp;quot;kernel32.dll&amp;quot;),
    &amp;quot;SetUnhandleExceptionFilter&amp;quot;);

 if(addr){
     unsigned char code[16];
     int size = 0;
     code[size++] = 0x33;
     code[size++] = 0xC0;
     code[size++] = 0xC2;
     code[size++] = 0x04;
     code[size++] = 0x00;
     DWORD dwOldFlag, dwTempFlag;
     VirtualProtect(addr,size, PAGE_READWRITE, &amp;amp;dwOldFlag);
     WriteProcessMemory(GetCurrentProcess(),addr,code,size,NULL);
     VirtualProtect(addr,size,dwOldFlag,&amp;amp;dwTempFlag);
     }
 }
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;安装dump代码-工程直接调用此韩剧即可&quot;&gt;&lt;a href=&quot;#安装dump代码-工程直接调用此韩剧即可&quot; class=&quot;headerlink&quot; title=&quot;安装dump代码,工程直接调用此韩剧即可&quot;&gt;&lt;/a&gt;安装dump代码,工程直接调用此韩剧即可&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;void InitMiniDump(){
    //注册异常处理函数
    SetUnhandleExceptionFilter(MyUnhandledExceptionFilter);
    //关闭系统自己调用
    DisableSetUnhandledExceptionFilter();
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;  在Windows上编写C代码时，生成的exe有时会莫名的崩溃，日志有时候不能够发现程序在何处崩溃掉了。常用的方法就是让系统帮助我们生成一个dump文件，然后使用windebug来帮助查找原因。&lt;/p&gt;
&lt;h3 id=&quot;dump如何加入到工程&quot;&gt;&lt;a href=&quot;#dum
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>测试评论系统</title>
    <link href="http://shuovr.cn/2016/03/16/test-disqus/"/>
    <id>http://shuovr.cn/2016/03/16/test-disqus/</id>
    <published>2016-03-16T09:50:29.974Z</published>
    <updated>2016-03-16T09:50:59.268Z</updated>
    
    <content type="html">&lt;p&gt;这是一个简单测试.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这是一个简单测试.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>VR（科学技术）</title>
    <link href="http://shuovr.cn/2016/03/16/test-newblog/"/>
    <id>http://shuovr.cn/2016/03/16/test-newblog/</id>
    <published>2016-03-16T09:29:36.753Z</published>
    <updated>2016-03-16T09:48:40.006Z</updated>
    
    <content type="html">&lt;p&gt;VR（Virtual Reality，即虚拟现实，简称VR），是由美国VPL公司创建人拉尼尔（Jaron Lanier）在20世纪80年代初提出的。其具体内涵是：综合利用计算机图形系统和各种现实及控制等接口设备，在计算机上生成的、可交互的三维环境中提供沉浸感觉的技术。其中，计算机生成的、可交互的三维环境成为虚拟环境（即Virtual Environment，简称VE）。虚拟现实技术是一种可以创建和体验虚拟世界的计算机仿真系统。它利用计算机生成一种模拟环境，是一种多源信息融合的交互式三维动态视景和实体行为的系统仿真使用户沉浸到该环境中。[1] .&lt;/p&gt;
&lt;h2 id=&quot;技术介绍&quot;&gt;&lt;a href=&quot;#技术介绍&quot; class=&quot;headerlink&quot; title=&quot;技术介绍&quot;&gt;&lt;/a&gt;技术介绍&lt;/h2&gt;&lt;p&gt;VR = Virtual Reality，虚拟现实，或称灵境技术，实际上是一种可创建和体验虚拟世界（Virtual World）的计算机系统[&lt;/p&gt;
&lt;h3 id=&quot;友好度很重要&quot;&gt;&lt;a href=&quot;#友好度很重要&quot; class=&quot;headerlink&quot; title=&quot;友好度很重要&quot;&gt;&lt;/a&gt;友好度很重要&lt;/h3&gt;&lt;p&gt; 随着社会经济的发展，计算机已经成为社会生活中不可缺少的重要组成部分，友好的人机接口技术很早已成为人们关心的一个重要课题，因为一个比较差的人机交互接口很可能将使一个功能很强的产品变得不可接受。&lt;br&gt;总体来讲，人机接口技术主要研究方向有两个方面：（1）人如何命令系统（2）系统如何向用户提供信息。&lt;br&gt;众所周知，人在使用计算机方面的感受（即人机交互部分的友好度）直接影响到人对系统的接受程度，而这两个方面直接决定了人机交互部分的友好度。&lt;/p&gt;
&lt;h3 id=&quot;虚拟现实&quot;&gt;&lt;a href=&quot;#虚拟现实&quot; class=&quot;headerlink&quot; title=&quot;虚拟现实&quot;&gt;&lt;/a&gt;虚拟现实&lt;/h3&gt;&lt;p&gt;互联网时代的来临使得人类的交流采用了新的方式，进入了新的领域。具体发展过程如下：命令界面—图形用户界面—多媒体界面—虚拟现实。&lt;br&gt;那么，什么是虚拟现实技术？&lt;br&gt;虚拟现实（Virtual Reality，简称VR），是由美国VPL公司创建人拉尼尔（Jaron Lanier）在20世纪80年代初提出的。其具体内涵是：综合利用计算机图形系统和各种现实及控制等接口设备，在计算机上生成的、可交互的三维环境中提供沉浸感觉的技术。其中，计算机生成的、可交互的三维环境成为虚拟环境（即Virtual Environment，简称VE）。&lt;br&gt;2014年3月26日，美国社交网络平台Facebook宣布，将斥资20亿美元收购沉浸式虚拟现实技术公司Oculus VR。[3]  Facebook 首席执行官Mark Zuckerberg坚信虚拟现实将成为继智能手机和平板电脑等移动设备之后，计算平台的又一大事件。并计划将Oculus的应用拓展到游戏以外的业务，在此之前，Oculus主要用于为人们在游戏过程中创造身临其境的感觉。[3]  Facebook收购Oculus，使得虚拟现实这个科技行业小众的名词，开始为更多业外的人们所熟悉。业内人士称，虚拟现实时隔7年多，又迎来了春天。&lt;br&gt;2015年3月在MWC2015上[4]  ，HTC与曾制作Portal和Half-Life等独创游戏的Valve联合开发的VR虚拟现实头盔产品HTC Vive亮相。HTC Vive控制器定位系统Lighthouse采用的是Valve的专利，它不需要借助摄像头，而是靠激光和光敏传感器来确定运动物体的位置，也就是说HTC Vive允许用户在一定范围内走动。这是它与另外两大头显 Oculus Rift 和PS VR的最大区别。该套件计划在2016年虚拟现实井喷之前发布，而且极有可能会在2015年年末与消费者见面&lt;/p&gt;
&lt;h3 id=&quot;应用领域&quot;&gt;&lt;a href=&quot;#应用领域&quot; class=&quot;headerlink&quot; title=&quot;应用领域&quot;&gt;&lt;/a&gt;应用领域&lt;/h3&gt;&lt;p&gt;VR（虚拟现实）技术可广泛的应用于城市规划、室内设计、工业仿真、古迹复原、桥梁道路设计、房地产销售、旅游教学、水利电力、地质灾害、教育培训等众多领域，为其提供切实可行的解决方案。&lt;br&gt;在先进制造业领域，站在大飞机发动机的3D影像面前，“可任意拆卸”这个虚拟现实的强项表现得淋漓尽致。操作人员可以把虚拟发动机的许多部件逐一拆下，再进入发动机内部。“虚拟现实”实现了跨平台的交互式设计、虚拟展示、虚拟装配、CAE数据可视化等功能，大幅提高设计团队的设计效率，使研发人员能及时发现、修正设计缺陷和潜在的工艺问题，提高产品开发的制造成功率。[6]&lt;br&gt;虚拟现实技术在教育培训领域也大有用武之地。为真实实验不具备或难以完成的教学功能创造条件。在涉及高危或极端的环境、不可及或不可逆的操作，高成本、高消耗、大型或综合训练等情况时，虚拟现实技术能提供可靠、安全和经济的实验项目。华东理工大学的G-Magic虚拟现实实验室，就是高校虚拟现实教学的一个范例。该实验室拥有CAVE洞穴式虚拟现实系统，可以把大学生设计的作品投影到墙面、天花板和地面上。比如，学生设计了一间淋浴房，他能利用这套系统把它展现在实验室里，和真实的淋浴房一样大小。营造出这种教学环境后，教师就能与学生更方便地交流各个环节的设计优劣，并随时做出修改。&lt;br&gt;企业的一些培训项目，同样离不开虚拟现实。以石油化工为例，众所周知，大型石油灌区集中了大量危险化学品，一旦操作不当，便可能引发火灾、爆炸事故，并造成环境污染等次生灾害。因此，政府和企业对大型石油灌区的安全性和操作人员的专业性提出了很高要求。虚拟现实技术可以构建储罐区应急救援及安全培训系统[6]  ，它不但能向员工呈现操作流程的各种场景，引导他们学习、掌握安全操作技能，还能模拟事故发生、火光熊熊的场面，让员工在沉浸式虚拟影像中开展救援行动。&lt;br&gt;影视&lt;br&gt;早在2015年年初的美国圣丹斯电影节上[7]  ，一部完全依靠CG制作的VR短片《LOST》就曾引来一阵热议。同年7月，同样是由《LOST》制作公司带来了他们的第二部VR短片《HENRY》。与之前的《LOST》不同，这一次他们在片中设计了“交互式”场景，改变了观众完全被动式的体验。就连《速度与激情》系列的导演林诣彬也在今年拍摄了一部VR短片《HELP》。由此可见，VR的春风确实已经开始刮向电影行业。[7]&lt;br&gt;绘画&lt;br&gt;谷歌在HTC与Valve联合开发的VR[8]  设备HTC Vive的基础上打造了Tilt Brush，其实就是VR版的Photoshop，通过使用HTC Vive的左右控制器来实现绘画创作。左边控制器在虚拟空间当中映射出一个立方体，显示出控制面板菜单，可转动立方体进行选择；右边控制器则相当于鼠标，当光标移动到相应菜单上时会有英文提示。其画板就是整个的三维立体空间，你可以为之设置壁纸背景，线条也可以自由设置色彩。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;VR（Virtual Reality，即虚拟现实，简称VR），是由美国VPL公司创建人拉尼尔（Jaron Lanier）在20世纪80年代初提出的。其具体内涵是：综合利用计算机图形系统和各种现实及控制等接口设备，在计算机上生成的、可交互的三维环境中提供沉浸感觉的技术。其中，
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://shuovr.cn/2016/03/16/hello-world/"/>
    <id>http://shuovr.cn/2016/03/16/hello-world/</id>
    <published>2016-03-16T03:39:30.406Z</published>
    <updated>2016-03-16T03:39:30.406Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
